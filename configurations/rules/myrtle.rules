import org.openhab.core.library.types.*
import org.openhab.core.persistence.*


rule "Update max and min temperatures"
when
        Item Weather_Temperature changed or
        Time cron "1 0 0 * * ?" or
        System started
then
        val startOfDay = now.toDateMidnight
        if(Weather_Temperature != null) {
        postUpdate(Weather_Temp_Max, Weather_Temperature.maximumSince(startOfDay).state)
        postUpdate(Weather_Temp_Min, Weather_Temperature.minimumSince(startOfDay).state)
    }
end

rule "Records last weather update time"
when
  Item Weather_Temperature received update
then
  postUpdate(Weather_LastUpdate, new DateTimeType())
end
rule "Trigger Fans"
  when
  
//    Time cron "0 0 10-18 ? 0 ?" or
    Item Temperature_Roof_Outside changed or
    Item Temperature_Roof_Central changed or
    Time cron "0 0 0 * * ?" 
  then
    var double Outside_Ref = (Temperature_Roof_Outside.state as DecimalType).doubleValue
    var double Central_Ref = (Temperature_Roof_Central.state as DecimalType).doubleValue

    if ((Central_Ref - Outside_Ref > 3)) {
	
	if (mySwitch.state == OFF) {
    		sendCommand(mySwitch, ON)
    		}
    }
    	if ((Central_Ref - Outside_Ref < 2)) {
	
	if (mySwitch.state == ON) {
    		sendCommand(mySwitch, OFF)
    		}
    }
    
  end
